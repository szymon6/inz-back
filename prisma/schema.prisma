// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
}

model Employee {
  id           Int                   @id @default(autoincrement())
  name         String
  email        String
  role         d_role                @relation(fields: [roleId], references: [id])
  roleId       Int
  empType      d_emp_type            @relation(fields: [empTypeId], references: [id])
  empTypeId    Int
  country      d_country             @relation(fields: [countryId], references: [id])
  countryId    Int
  region       d_region              @relation(fields: [regionId], references: [id])
  regionId     Int
  supervisor   d_supervisor          @relation(fields: [supervisorId], references: [id])
  supervisorId Int
  nowCreate    Boolean
  cma          DateTime              @db.Date
  cta          DateTime              @db.Date
  oldSysAdmin  DateTime              @db.Date
  snowCerts    Employee_snow_cert[]
  otherCerts   Employee_other_cert[]
}

model table_info {
  id          Int           @id @default(autoincrement())
  name        String
  displayName String
  columns     column_info[] @relation("table")
  references  column_info[] @relation("referenceTo")
}

model column_info {
  id                    Int            @id @default(autoincrement())
  name                  String
  displayName           String
  type                  String?
  table                 table_info     @relation("table", fields: [tableId], references: [id])
  tableId               Int
  displayValue          Boolean        @default(false)
  required              Boolean        @default(true)
  referenceTo           table_info?    @relation("referenceTo", fields: [referenceToId], references: [id])
  referenceToId         Int?
  referenceToDropdown   dropdown_info? @relation(fields: [referenceToDropdownId], references: [id])
  referenceToDropdownId Int?
}

model Snow_cert {
  id     Int                  @id @default(autoincrement())
  name   String
  type   d_snow_cert_type     @relation(fields: [typeId], references: [id])
  typeId Int
  certs  Employee_snow_cert[]
}

model Other_cert {
  id    Int                   @id @default(autoincrement())
  name  String
  certs Employee_other_cert[]
}

model Employee_snow_cert {
  id              Int       @id @default(autoincrement())
  employee        Employee  @relation(fields: [employeeId], references: [id])
  employeeId      Int
  cert            Snow_cert @relation(fields: [certId], references: [id])
  certId          Int
  courseDate      DateTime? @db.Date
  certDate        DateTime  @db.Date
  recentDeltaDate DateTime? @db.Date
}

model Employee_other_cert {
  id         Int        @id @default(autoincrement())
  employee   Employee   @relation(fields: [employeeId], references: [id])
  employeeId Int
  cert       Other_cert @relation(fields: [certId], references: [id])
  certId     Int
  certDate   DateTime   @db.Date
}

model dropdown_info {
  id         Int           @id @default(autoincrement())
  name       String        @unique
  references column_info[]
}

model d_role {
  id        Int        @id @default(autoincrement())
  value     String
  employees Employee[]
}

model d_emp_type {
  id        Int        @id @default(autoincrement())
  value     String
  employees Employee[]
}

model d_country {
  id        Int        @id @default(autoincrement())
  value     String
  employees Employee[]
}

model d_region {
  id        Int        @id @default(autoincrement())
  value     String
  employees Employee[]
}

model d_supervisor {
  id        Int        @id @default(autoincrement())
  value     String
  employees Employee[]
}

model d_snow_cert_type {
  id        Int         @id @default(autoincrement())
  value     String
  employees Snow_cert[]
}
