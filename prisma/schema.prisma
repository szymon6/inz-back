// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Car {
  id         Int      @id @default(autoincrement())
  brand      d_brand  @relation(fields: [brandId], references: [id])
  brandId    Int
  color      d_color? @relation(fields: [colorId], references: [id])
  colorId    Int?
  horsePower Int
  owner      Owner    @relation(fields: [ownerId], references: [id])
  ownerId    Int
}

model Owner {
  id        Int      @id @default(autoincrement())
  name      String
  birthDate DateTime @db.Date
  cars      Car[]
  bald      Boolean
}

model table_info {
  id          Int           @id @default(autoincrement())
  name        String
  displayName String
  columns     column_info[] @relation("table") //nazwa dlatego że są 2 takie same relacje
  references  column_info[] @relation("referenceTo") // --||--
}

model column_info {
  id                    Int            @id @default(autoincrement())
  name                  String         @unique
  displayName           String
  type                  String?
  table                 table_info     @relation("table", fields: [tableId], references: [id]) //tu też nazwa
  tableId               Int
  displayValue          Boolean        @default(false)
  required              Boolean        @default(true)
  referenceTo           table_info?    @relation("referenceTo", fields: [referenceToId], references: [id]) //--||--
  referenceToId         Int?
  referenceToDropdown   dropdown_info? @relation(fields: [referenceToDropdownId], references: [id])
  referenceToDropdownId Int?
}

model dropdown_info {
  id         Int           @id @default(autoincrement())
  name       String        @unique
  references column_info[]
}

model d_brand {
  id    Int    @id @default(autoincrement())
  value String
  cars  Car[]
}

model d_color {
  id    Int    @id @default(autoincrement())
  value String
  cars  Car[]
}
